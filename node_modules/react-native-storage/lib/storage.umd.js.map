{"version":3,"file":"storage.umd.js","sources":["../src/error.js","../src/storage.js"],"sourcesContent":["/**\n * Created by sunny on 9/1/16.\n */\n\nexport class NotFoundError extends Error {\n  constructor(message) {\n    super(`Not Found! Params: ${message}`);\n    this.name = 'NotFoundError';\n    this.stack = new Error().stack; // Optional\n  }\n}\n// NotFoundError.prototype = Object.create(Error.prototype);\n\nexport class ExpiredError extends Error {\n  constructor(message) {\n    super(`Expired! Params: ${message}`);\n    this.name = 'ExpiredError';\n    this.stack = new Error().stack; // Optional\n  }\n}\n// ExpiredError.prototype = Object.create(Error.prototype);\n","/*\n *  local storage(web/react native) wrapper\n *  sunnylqm\n */\nimport { NotFoundError, ExpiredError } from './error';\n\nexport default class Storage {\n  constructor(options = {}) {\n    this._SIZE = options.size || 1000; // maximum capacity\n    this.sync = options.sync || {}; // remote sync method\n    this.defaultExpires = options.defaultExpires !== undefined ? options.defaultExpires : 1000 * 3600 * 24;\n    this.enableCache = options.enableCache !== false;\n    this._s = options.storageBackend || null;\n    this._innerVersion = 11;\n    this.cache = {};\n\n    if (this._s && this._s.setItem) {\n      try {\n        var promiseTest = this._s.setItem('__react_native_storage_test', 'test');\n        this.isPromise = !!(promiseTest && promiseTest.then);\n      } catch (e) {\n        console.warn(e);\n        delete this._s;\n        throw e;\n      }\n    } else {\n      console.warn(`Data would be lost after reload cause there is no storageBackend specified!\n      \\nEither use localStorage(for web) or AsyncStorage(for React Native) as a storageBackend.`);\n    }\n\n    this._mapPromise = this.getItem('map').then(map => {\n      this._m = this._checkMap((map && JSON.parse(map)) || {});\n    });\n  }\n  getItem(key) {\n    return this._s\n      ? this.isPromise\n        ? this._s.getItem(key)\n        : Promise.resolve(this._s.getItem(key))\n      : Promise.resolve();\n  }\n  setItem(key, value) {\n    return this._s\n      ? this.isPromise\n        ? this._s.setItem(key, value)\n        : Promise.resolve(this._s.setItem(key, value))\n      : Promise.resolve();\n  }\n  removeItem(key) {\n    return this._s\n      ? this.isPromise\n        ? this._s.removeItem(key)\n        : Promise.resolve(this._s.removeItem(key))\n      : Promise.resolve();\n  }\n  _initMap() {\n    return {\n      innerVersion: this._innerVersion,\n      index: 0,\n      __keys__: {},\n    };\n  }\n  _checkMap(map) {\n    if (map && map.innerVersion && map.innerVersion === this._innerVersion) {\n      return map;\n    } else {\n      return this._initMap();\n    }\n  }\n  _getId(key, id) {\n    return key + '_' + id;\n  }\n  _saveToMap(params) {\n    let { key, id, data } = params,\n      newId = this._getId(key, id),\n      m = this._m;\n    if (m[newId] !== undefined) {\n      // update existing data\n      if (this.enableCache) this.cache[newId] = JSON.parse(data);\n      return this.setItem('map_' + m[newId], data);\n    }\n    if (m[m.index] !== undefined) {\n      // loop over, delete old data\n      let oldId = m[m.index];\n      let splitOldId = oldId.split('_');\n      delete m[oldId];\n      this._removeIdInKey(splitOldId[0], splitOldId[1]);\n      if (this.enableCache) {\n        delete this.cache[oldId];\n      }\n    }\n    m[newId] = m.index;\n    m[m.index] = newId;\n\n    m.__keys__[key] = m.__keys__[key] || [];\n    m.__keys__[key].push(id);\n\n    if (this.enableCache) {\n      const cacheData = JSON.parse(data);\n      this.cache[newId] = cacheData;\n    }\n    let currentIndex = m.index;\n    if (++m.index === this._SIZE) {\n      m.index = 0;\n    }\n    this.setItem('map_' + currentIndex, data);\n    this.setItem('map', JSON.stringify(m));\n  }\n  save(params) {\n    const { key, id, data, rawData, expires = this.defaultExpires } = params;\n    if (key.toString().indexOf('_') !== -1) {\n      console.error('Please do not use \"_\" in key!');\n    }\n    let dataToSave = { rawData: data };\n    if (data === undefined) {\n      if (rawData !== undefined) {\n        console.warn('\"rawData\" is deprecated, please use \"data\" instead!');\n        dataToSave.rawData = rawData;\n      } else {\n        console.error('\"data\" is required in save()!');\n        return;\n      }\n    }\n    let now = Date.now();\n    if (expires !== null) {\n      dataToSave.expires = now + expires;\n    }\n    dataToSave = JSON.stringify(dataToSave);\n    if (id === undefined) {\n      if (this.enableCache) {\n        const cacheData = JSON.parse(dataToSave);\n        this.cache[key] = cacheData;\n      }\n      return this.setItem(key, dataToSave);\n    } else {\n      if (id.toString().indexOf('_') !== -1) {\n        console.error('Please do not use \"_\" in id!');\n      }\n      return this._mapPromise.then(() =>\n        this._saveToMap({\n          key,\n          id,\n          data: dataToSave,\n        }),\n      );\n    }\n  }\n  getBatchData(querys) {\n    return Promise.all(querys.map(query => this.load(query)));\n  }\n  async getBatchDataWithIds(params) {\n    let { key, ids, syncInBackground, syncParams } = params;\n    const tasks = ids.map(id =>\n      this.load({\n        key,\n        id,\n        syncInBackground,\n        autoSync: false,\n        batched: true,\n      }),\n    );\n    const results = await Promise.all(tasks);\n    const missingIds = [];\n    results.forEach(value => {\n      if (value.syncId !== undefined) {\n        missingIds.push(value.syncId);\n      }\n    });\n    if (missingIds.length) {\n      const syncData = await this.sync[key]({\n        id: missingIds,\n        syncParams,\n      });\n      return results.map(value => {\n        return value.syncId ? syncData.shift() : value;\n      });\n    } else {\n      return results;\n    }\n  }\n  _lookupGlobalItem(params) {\n    const { key } = params;\n    if (this.enableCache && this.cache[key] !== undefined) {\n      return this._loadGlobalItem({ ret: this.cache[key], ...params });\n    }\n    return this.getItem(key).then(ret => this._loadGlobalItem({ ret, ...params }));\n  }\n  _loadGlobalItem(params) {\n    let { key, ret, autoSync, syncInBackground, syncParams } = params;\n    if (ret === null || ret === undefined) {\n      if (autoSync && this.sync[key]) {\n        return this.sync[key]({ syncParams });\n      }\n      throw new NotFoundError(JSON.stringify(params));\n    }\n    if (typeof ret === 'string') {\n      ret = JSON.parse(ret);\n      if (this.enableCache) {\n        this.cache[key] = ret;\n      }\n    }\n    let now = Date.now();\n    if (ret.expires < now) {\n      if (autoSync && this.sync[key]) {\n        if (syncInBackground) {\n          try {\n            this.sync[key]({ syncParams, syncInBackground });\n          } catch (e) {\n            // avoid uncaught exception\n          }\n          return ret.rawData;\n        }\n        return this.sync[key]({ syncParams, syncInBackground });\n      }\n      throw new ExpiredError(JSON.stringify(params));\n    }\n    return ret.rawData;\n  }\n  _noItemFound(params) {\n    let { key, id, autoSync, syncParams } = params;\n    if (this.sync[key]) {\n      if (autoSync) {\n        return this.sync[key]({ id, syncParams });\n      }\n      return { syncId: id };\n    }\n    throw new NotFoundError(JSON.stringify(params));\n  }\n  _loadMapItem(params) {\n    let { ret, key, id, autoSync, batched, syncInBackground, syncParams } = params;\n    if (ret === null || ret === undefined) {\n      return this._noItemFound(params);\n    }\n    if (typeof ret === 'string') {\n      ret = JSON.parse(ret);\n      const { key, id } = params;\n      const newId = this._getId(key, id);\n      if (this.enableCache) {\n        this.cache[newId] = ret;\n      }\n    }\n    let now = Date.now();\n    if (ret.expires < now) {\n      if (autoSync && this.sync[key]) {\n        if (syncInBackground) {\n          try {\n            this.sync[key]({ id, syncParams, syncInBackground });\n          } catch (e) {\n            // avoid uncaught exception\n          }\n          return ret.rawData;\n        }\n        return this.sync[key]({ id, syncParams, syncInBackground });\n      }\n      if (batched) {\n        return { syncId: id };\n      }\n      throw new ExpiredError(JSON.stringify(params));\n    }\n    return ret.rawData;\n  }\n  _lookUpInMap(params) {\n    let ret;\n    const m = this._m;\n    const { key, id } = params;\n    const newId = this._getId(key, id);\n    if (this.enableCache && this.cache[newId]) {\n      ret = this.cache[newId];\n      return this._loadMapItem({ ret, ...params });\n    }\n    if (m[newId] !== undefined) {\n      return this.getItem('map_' + m[newId]).then(ret => this._loadMapItem({ ret, ...params }));\n    }\n    return this._noItemFound({ ret, ...params });\n  }\n  remove(params) {\n    return this._mapPromise.then(() => {\n      let m = this._m;\n      let { key, id } = params;\n\n      if (id === undefined) {\n        if (this.enableCache && this.cache[key]) {\n          delete this.cache[key];\n        }\n        return this.removeItem(key);\n      }\n      let newId = this._getId(key, id);\n\n      // remove existing data\n      if (m[newId] !== undefined) {\n        if (this.enableCache && this.cache[newId]) {\n          delete this.cache[newId];\n        }\n        this._removeIdInKey(key, id);\n        let idTobeDeleted = m[newId];\n        delete m[newId];\n        this.setItem('map', JSON.stringify(m));\n        return this.removeItem('map_' + idTobeDeleted);\n      }\n    });\n  }\n  _removeIdInKey(key, id) {\n    const indexTobeRemoved = (this._m.__keys__[key] || []).indexOf(id);\n    if (indexTobeRemoved !== -1) {\n      this._m.__keys__[key].splice(indexTobeRemoved, 1);\n    }\n  }\n  load(params) {\n    const { key, id, autoSync = true, syncInBackground = true, syncParams, batched } = params;\n    return this._mapPromise.then(() => {\n      if (id === undefined) {\n        return this._lookupGlobalItem({\n          key,\n          autoSync,\n          syncInBackground,\n          syncParams,\n        });\n      } else {\n        return this._lookUpInMap({\n          key,\n          id,\n          autoSync,\n          syncInBackground,\n          batched,\n          syncParams,\n        });\n      }\n    });\n  }\n  clearAll() {\n    this._s.clear && this._s.clear();\n    this._m = this._initMap();\n  }\n  clearMap() {\n    return this.removeItem('map').then(() => {\n      this.cache = {};\n      this._m = this._initMap();\n    });\n  }\n  clearMapForKey(key) {\n    return this._mapPromise.then(() => {\n      let tasks = (this._m.__keys__[key] || []).map(id => this.remove({ key, id }));\n      return Promise.all(tasks);\n    });\n  }\n  getIdsForKey(key) {\n    return this._mapPromise.then(() => {\n      return this._m.__keys__[key] || [];\n    });\n  }\n  getAllDataForKey(key, options) {\n    options = Object.assign({ syncInBackground: true }, options);\n    return this.getIdsForKey(key).then(ids => {\n      const querys = ids.map(id => ({ key, id, syncInBackground: options.syncInBackground }));\n      return this.getBatchData(querys);\n    });\n  }\n}\n"],"names":["NotFoundError","message","name","stack","Error","ExpiredError","Storage","options","_SIZE","size","sync","defaultExpires","undefined","enableCache","_s","storageBackend","_innerVersion","cache","this","setItem","promiseTest","isPromise","then","e","console","warn","_mapPromise","getItem","map","_this","_m","_checkMap","JSON","parse","key","Promise","resolve","value","removeItem","innerVersion","index","__keys__","_initMap","id","params","data","newId","_getId","m","oldId","splitOldId","split","_removeIdInKey","push","cacheData","currentIndex","stringify","rawData","expires","toString","indexOf","error","dataToSave","now","Date","_this2","_saveToMap","querys","all","query","_this3","load","ids","syncInBackground","syncParams","tasks","_this4","autoSync","batched","results","missingIds","forEach","syncId","length","syncData","shift","_loadGlobalItem","ret","_this5","_noItemFound","_loadMapItem","_this6","_this7","idTobeDeleted","indexTobeRemoved","splice","_this8","_lookupGlobalItem","_lookUpInMap","clear","_this9","_this10","remove","_this11","Object","assign","getIdsForKey","_this12","getBatchData"],"mappings":"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"}